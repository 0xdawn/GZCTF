<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cache_Stopped" xml:space="preserve">
    <value>Cache update has been stopped</value>
  </data>
  <data name="Cache_WorkerCancelled" xml:space="preserve">
    <value>Cache update worker is stopping because task has been cancelled</value>
  </data>
  <data name="Cache_WorkerStarted" xml:space="preserve">
    <value>Cache update worker has been started</value>
  </data>
  <data name="Cache_WorkerStopped" xml:space="preserve">
    <value>Cache update worker has been stopped</value>
  </data>
  <data name="Challenge_NotFound" xml:space="preserve">
    <value>The challenge was not found</value>
  </data>
  <data name="Config_GlobalConfigAdded" xml:space="preserve">
    <value>Global configuration added: {0} =&gt; {1}</value>
  </data>
  <data name="Config_GlobalConfigUpdated" xml:space="preserve">
    <value>Global configuration updated: {0} =&gt; {1}</value>
  </data>
  <data name="Config_InitializingDatabase" xml:space="preserve">
    <value>Initializing database...</value>
  </data>
  <data name="Config_ReloadFailed" xml:space="preserve">
    <value>Failed to reload global configuration</value>
  </data>
  <data name="Config_TypeNotSupported" xml:space="preserve">
    <value>Unsupported configuration type</value>
  </data>
  <data name="CronJob_BootstrapRankingCache" xml:space="preserve">
    <value>Game #{0} is about to start, adding scoreboard cache to the cache queue</value>
  </data>
  <data name="CronJob_RemoveExpiredContainer" xml:space="preserve">
    <value>Expired container [{0}] has been removed</value>
  </data>
  <data name="CronJob_Started" xml:space="preserve">
    <value>Cron job has been started</value>
  </data>
  <data name="CronJob_Stopped" xml:space="preserve">
    <value>Cron job has been stopped</value>
  </data>
  <data name="Database_ConnectionFailed" xml:space="preserve">
    <value>Failed to connect to the database, please check the database connection string</value>
  </data>
  <data name="Database_CurrentConnectionString" xml:space="preserve">
    <value>Current connection string: {0}</value>
  </data>
  <data name="Database_NoConnectionString" xml:space="preserve">
    <value>The database connection string field 'ConnectionStrings' was not found, please check if appsettings.json has been properly mounted and configured</value>
  </data>
  <data name="FlagsChecker_Recheck" xml:space="preserve">
    <value>Recheck {0} flags</value>
  </data>
  <data name="FlagsChecker_Started" xml:space="preserve">
    <value>Flag checker has been started</value>
  </data>
  <data name="FlagsChecker_Stopped" xml:space="preserve">
    <value>Flag checker has been stopped</value>
  </data>
  <data name="FlagsChecker_WorkerCancelled" xml:space="preserve">
    <value>Checking task was cancelled, checker worker #{0} is about to stop</value>
  </data>
  <data name="FlagsChecker_WorkerExceptionOccurred" xml:space="preserve">
    <value>Checker worker #{0} encountered an exception</value>
  </data>
  <data name="FlagsChecker_WorkerStarted" xml:space="preserve">
    <value>Checker worker #{0} has been started</value>
  </data>
  <data name="FlagsChecker_WorkerStartProcessing" xml:space="preserve">
    <value>Checker worker #{0} starts to process submission: {1}</value>
  </data>
  <data name="FlagsChecker_WorkerStopped" xml:space="preserve">
    <value>Checker worker #{0} has been stopped</value>
  </data>
  <data name="Game_CannotLeaveAfterApproval" xml:space="preserve">
    <value>Can not exit the game after entrance approval</value>
  </data>
  <data name="Game_CannotLeaveWithoutJoin" xml:space="preserve">
    <value>Can not exit the game you are not joining</value>
  </data>
  <data name="Game_End" xml:space="preserve">
    <value>The game has ended</value>
  </data>
  <data name="Game_InOtherTeam" xml:space="preserve">
    <value>You have joined the game from other team</value>
  </data>
  <data name="Game_InvalidInvitationCode" xml:space="preserve">
    <value>Invalid game invitation code</value>
  </data>
  <data name="Game_InvalidOrganization" xml:space="preserve">
    <value>Invalid organization</value>
  </data>
  <data name="Game_JoinSucceeded" xml:space="preserve">
    <value>{0} has successfully joined game {1}</value>
  </data>
  <data name="Game_NotFound" xml:space="preserve">
    <value>The game was not found</value>
  </data>
  <data name="Game_NotMemberOfTeam" xml:space="preserve">
    <value>You are not a member of the team</value>
  </data>
  <data name="Game_NotStarted" xml:space="preserve">
    <value>The game has not started</value>
  </data>
  <data name="Game_TeamMemberLimitExceeded" xml:space="preserve">
    <value>The number of participants in the team exceeds the limit</value>
  </data>
  <data name="Game_TeamNotFound" xml:space="preserve">
    <value>The team was not found</value>
  </data>
  <data name="Model_ValicationFailed" xml:space="preserve">
    <value>Failed to validate the input, please check again</value>
  </data>
  <data name="Post_NotFound" xml:space="preserve">
    <value>The post was not found</value>
  </data>
  <data name="Server_Exited" xml:space="preserve">
    <value>Server exited</value>
  </data>
  <data name="Server_Failed" xml:space="preserve">
    <value>Server exited unexpectedly due to exceptions</value>
  </data>
  <data name="Submission_NotFound" xml:space="preserve">
    <value>The submission was not found</value>
  </data>
</root>